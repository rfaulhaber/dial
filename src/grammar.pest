// TODO see this for inspiration https://www.scheme.com/tspl2d/grammar.html
int = @{ "-"? ~ ASCII_DIGIT+ }
float = @{ "-"? ~ ASCII_DIGIT* ~ "." ~ ASCII_DIGIT+ }

number = _{ float | int }

operator = _{ add | sub | mul | div }
add      = { "+" }
sub 	 = { "-" }
mul 	 = { "*" }
div      = { "/" }

nil = { "nil" }

quote = _{ "'" }

list = { quote ~ "(" ~ atom+ ~ ")" }

list_specials = _{ let_key | def_key }
let_key = _{ "let" }
def_key = _{ "def" }

symbol = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "-" | "_" | "!" | "$" | "%" | "*" | "^" | "+")+? }

atom = _{ nil | number | symbol }

expr = { atom | symbol | "(" ~ operator ~ expr+ ~ ")"}

// TODO should these be recursive?
def_expr = { "(" ~ def_key  ~ symbol ~ expr ~ ")" }
let_bind = { "(" ~ let_key ~ var_bind ~ expr+ ~ ")" }

var_bind = _{ "(" ~ symbol ~ expr ~ ")" } // TODO can this be reused?

form = _{ atom+ | expr+ | def_expr+ | let_bind+ | COMMENT }

repl_line = _{ form }

WHITESPACE = _{ " " | "\t" }
COMMENT = @{ ";" ~ ANY* }